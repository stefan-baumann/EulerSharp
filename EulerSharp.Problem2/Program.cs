using System;

namespace EulerSharp.Problem2
{
    /* Problem Description:
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     * 
     * Solution Notes:
     * - x is a multiple of y if x % y == 0. So if x % 2 == 0, x is even.
     */

    public static class Program
    {
        public static void Main(string[] args)
        {
            int lastValue = 1;
            int currentValue = 1;
            int sum = 0;
            //Repeat while the number in the Fibonacci sequence is not bigger than 4 million
            while (currentValue <= 4000000)
            {
                //Calculate the next value in the Fibonacci sequence
                int newValue = lastValue + currentValue; //Calculate the next fibonacci number
                lastValue = currentValue; //The last current value is now the last value
                currentValue = newValue; //The new value is now the current value

                //Check whether the current number in the Fibonacci sequence is even
                if (currentValue % 2 == 0)
                {
                    //Add the current number to the sum
                    sum += currentValue;
                }
            }

            //Write the result to the console
            Console.WriteLine("The sum of all even numbers in the Fibonacci sequence which do not exceed four million is " + sum);

            //Wait for a keypress before terminating the program (so that the user can read the output)
            Console.ReadKey(true);
        }
    }
}
